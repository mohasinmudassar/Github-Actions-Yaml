name: Deploy to EC2 with docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fix unmet dependencies
        run: |
          sudo apt-get update
          sudo apt-get remove -y moby-containerd moby-engine moby-cli moby-runc
          
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build Docker image
        run: docker build -t image-name:latest . -f deploy/live/django/Dockerfile (your own path)

      - name: Deploy with Docker Compose
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
            echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > ec2_ssh_key.pem
            chmod 600 ec2_ssh_key.pem
            scp -r -o StrictHostKeyChecking=no -i ec2_ssh_key.pem ./* ubuntu@x.x.x.x:/home/ubuntu/folder/
            ssh -o StrictHostKeyChecking=no -i ec2_ssh_key.pem ubuntu@x.x.x.x "cd /home/ubuntu/folder in which you have docker-compose file && docker-compose up -d"